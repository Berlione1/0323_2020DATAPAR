# importing lib

import getpass
import random

class color:
    PURPLE = '\033[95m'
    CYAN = '\033[96m'
    DARKCYAN = '\033[36m'
    BLUE = '\033[94m'
    GREEN = '\033[92m'
    YELLOW = '\033[93m'
    RED = '\033[91m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'
    END = '\033[0m'


welcome=""""
   
************************************************************
*                                                          *
*            Welcome to Pokemon Fight!                     *
*                                                          *
************************************************************
                                                                        """
                                                                        
# Defining player1

name_player1 = input("Welcome, what is your name? ",)
mode=['YES', 'NO'] 
solo=input("\n"+"Do you want to play solo ? [YES/NO] ",)
while solo not in mode:
    solo = input("Multi or Solo ? ",)

if solo=='NO':
    name_player2 = input("Welcome Player2, what is your name? ",)

print(welcome)

while True:

    print("Hey, I'm professor chen!")
    print("\n"+"As you know the world is full of Pokemons. Each pokemon has 4 types of action: attack, defense, burst and heal.")
    print("Attack deals damage to your opponent. Defense cancel your oponent's attack. Burst recreates your opponent's attack twice bigger. Heal gives you life points in the limit of your maximum life.")
    
    print("\n"+"There are 4 types of pokemon based on their main actions: attacker, defenser, burster and healer. For instance, an attacker will do more damage when doing the action 'attack'")
 
    name_pokemon1 = input("\n"+ f"What is the name of your pokemon, {name_player1}? ",)
    life_pokemon1 = 100
         
    player1_pkm = input(f"What type is your pokemon, {name_player1}? Please choose between attacker, defenser, burster or healer: ",)
    while player1_pkm not in ("attacker", "defenser", "burster", "healer"):
        player1_pkm = input("Sorry, you must choose between attacker, defenser, burster or healer: ",)    
        

    # Dictionary player1

    if player1_pkm == 'attacker':
        player1_pkm_points = {'ATK':-20,'DEF':0,'BURST':0,'HEAL':5}
        max_life_pokemon1 = 100
    elif player1_pkm == 'defenser':
        player1_pkm_points = {'ATK':-15,'DEF':0,'BURST':0,'HEAL':10}
        life_pokemon1 = 120
        max_life_pokemon1 = 120
    elif player1_pkm == 'burster':
        player1_pkm_points = {'ATK':-15,'DEF':0,'BURST':-10,'HEAL':10}
        max_life_pokemon1 = 100
    else:
        player1_pkm_points = {'ATK':-10,'DEF':0,'BURST':0,'HEAL':15}
        max_life_pokemon1 = 100
    print('There are the stats of you pokemon :',player1_pkm, player1_pkm_points)

    # Defining computer

    if solo=='YES':
        pkm_type=["attacker", "defenser", "burster", "healer"]
        name_pokemon2 = 'Badass'
        life_pokemon2 = 100
        player2_pkm = random.choice(pkm_type)
    
    #Defining player 2
    elif solo=='NO':
        name_pokemon2 = input("\n"+f"What is the name of you pokemon,{name_player2}? ",)
        life_pokemon2 = 100
        player2_pkm = input(f"What type is your pokemon,{name_player2} ? Please choose between attacker, defenser, burster or healer: ",)
        while player2_pkm not in ("attacker", "defenser", "burster", "healer"):
            player2_pkm = input("Sorry, you must choose between attacker, defenser, burster or healer: ",)
        

    # Dictionnary player2 / computer

    if player2_pkm == 'attacker':
        player2_pkm_points = {'ATK':-20,'DEF':0,'BURST':0,'HEAL':5}
        max_life_pokemon2 = 100
    elif player2_pkm == 'defenser':
        player2_pkm_points = {'ATK':-15,'DEF':0,'BURST':0,'HEAL':10}
        life_pokemon2 = 120
        max_life_pokemon2 = 120
    elif player2_pkm == 'burster':
        player2_pkm_points = {'ATK':-15,'DEF':0,'BURST':-10,'HEAL':10}
        max_life_pokemon2 = 100
    else:
        player2_pkm_points = {'ATK':-10,'DEF':0,'BURST':0,'HEAL':15}
        max_life_pokemon2 = 100

    print('There are the stats of your rival :',player2_pkm, player2_pkm_points)
    print("\n"+"Let the battle start now! Each of your pokemon's life is at level 100 unless for defenser type's pokemon, who have a life level of 120. Fight until your enemy's life reach 0! ")

    while life_pokemon1 != 0 and life_pokemon2 != 0:
      
        # Actions player 1
        if solo=='YES':
            print("\n"+f"{name_player1} You will now choose 5 actions against {name_pokemon2}")
            list_action1=[]
            print(f" {name_player1} what is your action with {name_pokemon1} ? Please choose wisely between ATK, DEF, BURST or HEAL.")
            while len(list_action1)<5:
                action1 =input(f"Your action is ",)
                if action1 in ("ATK", "DEF", "BURST", "HEAL"):
                    list_action1.append(action1)
                else:
                    print("Sorry, you must choose between ATK, DEF, BURST or HEAL ")
                    
        if solo=='NO':
            print("\n"+f"{name_player1}, you will now choose 5 actions against {name_pokemon2}")
            list_action1=[] 
            while len(list_action1)<5:
                action1 = getpass.getpass(prompt = f" {name_player1} what is your action with {name_pokemon1} ? Please choose between ATK, DEF, BURST or HEAL :")
                if action1 in ("ATK", "DEF", "BURST", "HEAL"):
                    list_action1.append(action1)
                else: 
                    print("Sorry, you must choose between ATK, DEF, BURST or HEAL ")

        # Actions computer
        if solo=='YES':
            list_action2=[]
            action=["ATK", "DEF", "BURST", "HEAL"]
            while len(list_action2)<5:
                action2 = random.choice(action)
                list_action2.append(action2)
            print("\n"+f'{name_player1} there is your list of actions:',list_action1)
            print("\n"+f"There is the list of actions of your rival:",list_action2)
            
        # Actions player 2
        if solo=='NO':               
            print("\n"+f"{name_player2}, you will now choose 5 actions against {name_pokemon2}")
            list_action2=[]
            while len(list_action2)<5:
                action2 = getpass.getpass(prompt = f" {name_player2} what is your action with {name_pokemon2} ? Please choose between ATK, DEF, BURST or HEAL :")
                if action2 in ("ATK", "DEF", "BURST", "HEAL"):
                    list_action2.append(action2)
                else:
                    print("Sorry, you must choose between ATK, DEF, BURST or HEAL ")
            
            print("\n"+f'{name_player1} there is your list of actions:',list_action1)
            print("\n"+f'{name_player2} there is your list of actions:',list_action2)

          # Transforming the actions in lifepoints:
        list_power1=[]
        list_power2=[]

        for power1 in list_action1:
            for i, j in player1_pkm_points.items():
                if power1 == i:
                    list_power1.append(j)

        for power2 in list_action2:
            for i, j in player2_pkm_points.items():
                if power2 == i:
                    list_power2.append(j)

        print(list_action1, list_power1)
        print(list_action2, list_power2)

# Resoltuion of the fight
        for i, j in (zip(list_action1,list_action2)):
        #if PKM 1 as no more life -> we can deal any dmg 
            if life_pokemon1 <= 0:
                life_pokemon1=0
                life_pokemon2+=0
                
        #if PKM 2 as no more life -> we can deal any dmg 
            elif life_pokemon2 <= 0:
                life_pokemon2=0
                life_pokemon1+=0
                
        #if PKM1 HEAL and PKM2 ATK
            elif i=='HEAL' and j=='ATK':
                life_pokemon1+=player2_pkm_points[j]+player1_pkm_points[i]
                if life_pokemon1>max_life_pokemon1:
                    life_pokemon1=max_life_pokemon1
                
        #if PKM2 HEAL and PKM1 ATK        
            elif i=='ATK' and j=='HEAL':
                life_pokemon2+=player2_pkm_points[j]+player1_pkm_points[i]
                if life_pokemon2>max_life_pokemon2:
                    life_pokemon2=max_life_pokemon2
                    
        #if PM1 HEAL and PKM2 HEAL 
            elif i=='HEAL' and j=='HEAL':
                life_pokemon1+=player1_pkm_points[i]
                if life_pokemon1>max_life_pokemon1:
                    life_pokemon1=max_life_pokemon1
                life_pokemon2+=player2_pkm_points[j]
                if life_pokemon2>max_life_pokemon2:
                    life_pokemon2=max_life_pokemon2
                    
                
        #if PKM1/2 DEF and PKM1/2 don't HEAL
            elif (i=='DEF' and j!='HEAL') or (j=='DEF' and i!='HEAL'):
                life_pokemon1+=0
                life_pokemon2+=0
                
        #if PKM1/2 DEF and PKM1/2 HEAL
            elif (i=='DEF' and j=='HEAL') or (j=='DEF' and i=='HEAL'):
                life_pokemon1+=player1_pkm_points[i]
                life_pokemon2+=player2_pkm_points[j]
        
        #if PKM1/2 BURST and PKM1/2 ATK
            elif (i=='BURST' and j=='ATK') or (j=='BURST' and i=='ATK'):
                if i=='BURST':
                    life_pokemon1+=player2_pkm_points[j]
                    life_pokemon2+=player2_pkm_points[j]*2
                elif j=='BURST':
                    life_pokemon1+=player1_pkm_points[i]*2
                    life_pokemon2+=player1_pkm_points[i]
                    
        #if PKM1 HEAL and PKM2 BURST
            elif i=='HEAL' and j=='BURST':
                life_pokemon2+=player2_pkm_points[j]+player1_pkm_points[i]
                if life_pokemon2>max_life_pokemon2:
                    life_pokemon2=max_life_pokemon2
                
        #if PKM2 HEAL and PKM1 BURST        
            elif i=='BURST' and j=='HEAL':
                life_pokemon1+=player2_pkm_points[j]+player1_pkm_points[i]
                if life_pokemon1>max_life_pokemon1:
                    life_pokemon1=max_life_pokemon1 

        #Otherwise:
            else:
                life_pokemon1+=player2_pkm_points[j]
                life_pokemon2+=player1_pkm_points[i]
        
        print("\n"+f"{name_player1}, your pokemon {name_pokemon1} has {life_pokemon1} level of life.")
        
        if solo=='YES':
            print("\n"+f"Badass, the pokemon of your rival has {life_pokemon2} level of life.")
        else:
            print(color.DARKCYAN+"\n"+f"{name_player2}, your pokemon {name_pokemon2} has {life_pokemon2} level of life."+color.END)

    while True:
        if life_pokemon1 == 0 and life_pokemon2 >0 :
            if solo=='YES':
                print("\n"+f"What! You are so noob! Or perhaps is your rival too strong." )
            else :
                print("\n"+color.BOLD +f"Wow {name_player2}, you're so strong, you won the game thanks to {name_pokemon2}!"+color.END )

        if life_pokemon2 == 0 and life_pokemon1 >0 :
            print("\n"+f"Wow {name_player1}, you're so strong, you won the game thanks to {name_pokemon1}!" )

        if life_pokemon2 == 0 and life_pokemon1 == 0:
                print("\n"+color.BOLD+f"What! No one won this time, both pokemons are K.O!!!"+color.END)
                print(pokemon_fight_sad+"\n")

        answer = input('Do you want to play a new game? [YES/NO]')
        if answer in ('YES', 'NO'):
            break
        print('Please write YES or NO')

    if answer == 'YES':
        continue

    else:
        print('Goodbye, thanks for playing!')
        break
